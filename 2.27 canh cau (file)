#include <bits/stdc++.h> 
using namespace std; 
using ll=long long;
const int maxn=100005;
const long long INF=1e18;
const ll MOD=1e9+7;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sz(x) x.size()
#define rvs(a) reverse(a.begin(),a.end())
#define mst_bool(x) memset(x,false,sizeof(x))
#define mst_int(x) memset(x,0,sizeof(x))
#define fe(x,a) for(auto x:a)
#define Fe(x,a) for(auto &x:a)
#define vll vector<ll>
#define vi vector<int>
#define vb vector<bool>

int n;
int a[1005][1005];

void OF(){
    freopen("TK.INP","r",stdin);
    freopen("TK.OUT","w",stdout);
}

void input(){
    cin>>n;
    for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)cin>>a[i][j];
}

bool vst[1005];
int low[1005],tin[1005],cnt;
vector<pii> Edge;

void dfs(int u,int parent){
    vst[u]=true;
    low[u]=tin[u]=++cnt;
    for(int v=1;v<=n;v++){
        if(v==parent)continue;
        if(a[u][v]){
            if(vst[v]){
                low[u]=min(low[u],tin[v]);
            }
            else{
                dfs(v,u);
                low[u]=min(low[u],low[v]);
                if(low[v]>tin[u]){

                    if(u<v) Edge.push_back({u,v});
                    else Edge.push_back({v,u});
                }
            }
        }
    }
}

void tarjan(){
    for(int i=1;i<=n;i++){
        if(!vst[i]){
            dfs(i,-1);
        }
    }
}

int main(){
    OF();
    input();
    tarjan();
    sort(Edge.begin(),Edge.end());
    cout<<sz(Edge)<<endl;
    fe(x,Edge)cout<<x.first<<" "<<x.second<<endl;
}
